import numpy as np
from surprise import Dataset, Reader
from surprise.model_selection import cross_validate, GridSearchCV
from surprise import SVD, SVDpp, NMF

# Завантаження датасету MovieLens
# Використовуємо вбудований датасет movielens-100k
data = Dataset.load_builtin('ml-100k')

# Вибір моделі та підбір параметрів
# 1. Модель SVD
param_grid_svd = {
    'n_factors': [50, 100, 150],
    'n_epochs': [20, 30, 50],
    'lr_all': [0.002, 0.005],
    'reg_all': [0.02, 0.1]
}
gs_svd = GridSearchCV(SVD, param_grid_svd, measures=['rmse', 'mae'], cv=5, n_jobs=-1)
gs_svd.fit(data)

# Оптимальні параметри для SVD
best_params_svd = gs_svd.best_params['rmse']
print("Best SVD params:", best_params_svd)

# 2. Модель SVD++
param_grid_svdpp = {
    'n_factors': [50, 100],
    'n_epochs': [20, 30],
    'lr_all': [0.002, 0.005],
    'reg_all': [0.02, 0.1]
}
gs_svdpp = GridSearchCV(SVDpp, param_grid_svdpp, measures=['rmse', 'mae'], cv=5, n_jobs=-1)
gs_svdpp.fit(data)

# Оптимальні параметри для SVD++
best_params_svdpp = gs_svdpp.best_params['rmse']
print("Best SVD++ params:", best_params_svdpp)

# 3. Модель NMF
param_grid_nmf = {
    'n_factors': [15, 30, 50],
    'n_epochs': [20, 30],
    'reg_pu': [0.06, 0.1],
    'reg_qi': [0.06, 0.1]
}
gs_nmf = GridSearchCV(NMF, param_grid_nmf, measures=['rmse', 'mae'], cv=5, n_jobs=-1)
gs_nmf.fit(data)

# Оптимальні параметри для NMF
best_params_nmf = gs_nmf.best_params['rmse']
print("Best NMF params:", best_params_nmf)

# Вибір оптимального алгоритму
print("SVD best RMSE:", gs_svd.best_score['rmse'])
print("SVD++ best RMSE:", gs_svdpp.best_score['rmse'])
print("NMF best RMSE:", gs_nmf.best_score['rmse'])
